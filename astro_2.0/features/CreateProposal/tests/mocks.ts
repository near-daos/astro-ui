import { DAO } from 'types/dao';
import { Token } from 'types/token';
import { ProposalType } from 'types/proposal';

export const daoMock = {
  id: 'default-flag-test.sputnikv2.testnet',
  txHash: 'A5HkEoiEuiyPPAR69DH7MFnWfui4mUqnZGjKyGpFjK4h',
  name: 'default-flag-test',
  description: '',
  members: 1,
  daoMembersList: ['alexeysputnik.testnet'],
  proposals: 0,
  activeProposalsCount: 0,
  totalProposalsCount: 0,
  totalProposals: 0,
  logo: 'https://sputnik-dao.s3.eu-central-1.amazonaws.com/default.png',
  flagCover:
    'https://sputnik-dao.s3.eu-central-1.amazonaws.com/U1KVTf5ctss2feAebXooI',
  flagLogo: '',
  funds: '97.30',
  totalDaoFunds: 97.30000000000001,
  createdAt: '2021-12-26T20:30:46.036Z',
  groups: [
    {
      members: ['alexeysputnik.testnet'],
      name: 'Everyone',
      permissions: [
        '*:VoteReject',
        '*:VoteRemove',
        '*:VoteApprove',
        '*:AddProposal',
        '*:Finalize',
      ],
      votePolicy: {},
      slug: 'Everyone',
    },
  ],
  policy: {
    isArchived: false,
    createdAt: '2021-12-26T20:30:46.036Z',
    updatedAt: '2021-12-26T20:30:46.036Z',
    daoId: 'default-flag-test.sputnikv2.testnet',
    proposalBond: '100000000000000000000000',
    bountyBond: '100000000000000000000000',
    proposalPeriod: '604800000000000',
    bountyForgivenessPeriod: '604800000000000',
    defaultVotePolicy: {
      weightKind: 'RoleWeight',
      quorum: '0',
      kind: 'Ratio',
      ratio: [1, 2],
    },
    roles: [
      {
        isArchived: false,
        createdAt: '2021-12-26T20:30:46.036Z',
        updatedAt: '2022-01-13T22:39:52.173Z',
        id: 'default-flag-test.sputnikv2.testnet-all',
        name: 'all',
        kind: 'Everyone',
        balance: null,
        accountIds: null,
        permissions: ['*:AddProposal'],
        votePolicy: {},
      },
      {
        isArchived: false,
        createdAt: '2021-12-26T20:30:46.036Z',
        updatedAt: '2022-01-13T22:39:52.173Z',
        id: 'default-flag-test.sputnikv2.testnet-Everyone',
        name: 'Everyone',
        kind: 'Group',
        balance: null,
        accountIds: ['alexeysputnik.testnet'],
        permissions: [
          '*:VoteReject',
          '*:VoteRemove',
          '*:VoteApprove',
          '*:AddProposal',
          '*:Finalize',
        ],
        votePolicy: {},
      },
    ],
  },
  links: [],
  displayName: 'Default Flag Test',
  lastProposalId: 0,
  legal: {
    legalStatus: '',
    legalLink: '',
  },
} as unknown as DAO;

export const tokens = {
  NEAR: {
    createdAt: '2021-12-07T19:15:52.793Z',
    transactionHash: null,
    updateTransactionHash: null,
    createTimestamp: null,
    updateTimestamp: '1639053338980000000',
    id: 'NEAR',
    ownerId: '',
    totalSupply: '',
    decimals: 24,
    icon: 'customIcon',
    name: null,
    reference: null,
    referenceHash: null,
    spec: null,
    symbol: 'NEAR',
    price: '10.68',
    balance: '5.1002',
    tokenId: '',
  },
  BIBA: {
    createdAt: '2021-12-07T19:15:52.793Z',
    transactionHash: null,
    updateTransactionHash: null,
    createTimestamp: null,
    updateTimestamp: '1639053338980000000',
    id: 'BIBA',
    ownerId: '',
    totalSupply: '',
    decimals: 24,
    icon: 'customIcon',
    name: null,
    reference: null,
    referenceHash: null,
    spec: null,
    symbol: 'BIBA',
    price: '10.68',
    balance: '5.1002',
    tokenId: '',
  },
} as unknown as Record<string, Token>;

const propPerms = {
  [ProposalType.ChangePolicy]: true,
  [ProposalType.ChangeConfig]: true,
  [ProposalType.AddBounty]: true,
  [ProposalType.Transfer]: true,
  [ProposalType.Vote]: true,
  [ProposalType.RemoveMemberFromRole]: true,
  [ProposalType.AddMemberToRole]: true,
  [ProposalType.AddMemberToRole]: true,
  [ProposalType.FunctionCall]: true,
  [ProposalType.UpgradeRemote]: true,
  [ProposalType.UpgradeSelf]: true,
  [ProposalType.SetStakingContract]: true,
  [ProposalType.BountyDone]: true,
};

export const permissions = {
  isCanCreateProposals: true,
  isCanCreatePolicyProposals: true,
  allowedProposalsToCreate: {
    ...propPerms,
  },
  allowedProposalsToVote: {
    ...propPerms,
  },
};
