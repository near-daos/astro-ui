name: Build Deploy
on:
  workflow_dispatch:
    inputs:
      environment:
        required: false
        description: Specify environment to run on. Valid values are develop, test, qa, staging, production
  push:
    branches:
    - develop
    - staging
    tags:
    - "**"

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  GOOGLE_ANALYTICS_KEY: ${{ secrets.GOOGLE_ANALYTICS_KEY }}
  LOG_ROCKET_APP_ID: ${{ secrets.LOG_ROCKET_APP_ID }}
  AWS_ECR_URL: ${{ secrets.AWS_ECR_URL }}
  EKS_CLUSTER_NAME: ${{ secrets.EKS_CLUSTER_NAME }}
  KUBE_CONFIG_DATA:  ${{ secrets.KUBE_CONFIG_DATA }}
  NODE_OPTIONS: "--max-old-space-size=7168"
  NEXT_PUBLIC_LAUNCHDARKLY_ID: ${{ secrets.NEXT_PUBLIC_LAUNCHDARKLY_ID }}

jobs:
  get-environment:
    name: Get Environment
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.get-environment.outputs.environment }}
    steps:
    - name: get environment
      id: get-environment
      shell: bash
      run: |
        set -x
        if [[ "${{ github.ref }}" =~ ^refs/tags.* ]]
        then
          echo "::set-output name=environment::production"
        elif [[ "${{ github.ref }}" =~ ^refs/heads/staging ]]
        then
          echo "::set-output name=environment::staging"
        elif [[ "${{ github.ref }}" =~ ^refs/heads/develop ]]
        then
          echo "::set-output name=environment::develop"
        fi
        if [[ "${{ github.event.inputs.environment }}" != "" ]]
        then
          echo "input was provided: ${{ github.event.inputs.environment }}"
          echo "::set-output name=environment::${{ github.event.inputs.environment }}"
        fi

  build-deploy:
    runs-on: ubuntu-latest
    name: Build Deploy
    needs:
    - get-environment
    environment:
      name: ${{ needs.get-environment.outputs.environment }}
    steps:
    - uses: actions/checkout@v2
    - name: Set Environment
      run: |
        echo DOCKER_ENV_TAG=${{ needs.get-environment.outputs.environment }}-$GITHUB_SHA >> $GITHUB_ENV
        cat ".github/env.common" >>$GITHUB_ENV
        cat ".github/env.${{ needs.get-environment.outputs.environment }}" >>$GITHUB_ENV

    - name: Docker Build Publish
      uses: ./.github/actions/docker-build-publish

    - name: helm deploy
      uses: koslib/helm-eks-action@v1.8.0
      with:
        command: |
          export CHART_FOLDER=deployment/app-chart
          helm lint $CHART_FOLDER
          helm --namespace $DEPLOYMENT_NAMESPACE upgrade --install --create-namespace --wait $APP_NAME $CHART_FOLDER \
            --set image.tag=$DOCKER_ENV_TAG \
            --set environment.near_env=${NEAR_ENV} \
            --set environment.near_contract_name=${NEAR_CONTRACT_NAME} \
            --set environment.api_url=${API_URL} \
            --set environment.google_analytics_key=${GOOGLE_ANALYTICS_KEY} \
            --set environment.log_rocket_app_id=${LOG_ROCKET_APP_ID} \
            --set environment.near_env=${NEAR_ENV} \
            --set environment.stats_api_url=${STATS_API_URL} \
            --set environment.next_public_launchdarkly_id=${NEXT_PUBLIC_LAUNCHDARKLY_ID} \
            --set environment.app_domain=${APP_DOMAIN} \
            --set ingress.host=${K8S_INGRESS_HOST}


  run-autotests:
    name: Run Autotests
    needs:
    - build-deploy
    - get-environment
    if: needs.get-environment.outputs.environment == 'develop'
    uses: near-daos/astro-ui/.github/workflows/run-autotests.yaml@autotests
    with:
      environment: develop
      tags: smoke
      browser: chrome
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
      TEST_REPO_TOKEN: ${{ secrets.TEST_REPO_TOKEN }}

  build-deploy-storybook:
    runs-on: ubuntu-latest
    if: needs.get-environment.outputs.environment == 'develop'
    name: Build Deploy Storybook
    needs:
    - get-environment
    environment:
      name: ${{ needs.get-environment.outputs.environment }}
    steps:
    - uses: actions/checkout@v2
    - name: Set Environment
      run: |
        echo DOCKER_ENV_TAG=${{ needs.get-environment.outputs.environment }}-$GITHUB_SHA >> $GITHUB_ENV
        cat ".github/env.common" >>$GITHUB_ENV
        cat ".github/env.${{ needs.get-environment.outputs.environment }}" >>$GITHUB_ENV
    - name: Build Deploy Storybook
      uses: ./.github/actions/build-deploy-storybook
