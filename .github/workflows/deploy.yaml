name: Deploy
on:
  workflow_dispatch:
    inputs:
      environment:
        required: true
        description: Specify environment to run on. Valid values are test, production
      tag:
        required: true
        description: Docker tag to deploy. Valid values are "latest", "<branch>-latest", "<commit_sha>", "<environment>-<commit_sha>". Exact values can be found in "Docker Build Publish" step of "Build Deploy" job.

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  GOOGLE_ANALYTICS_KEY: ${{ secrets.GOOGLE_ANALYTICS_KEY }}
  LOG_ROCKET_APP_ID: ${{ secrets.LOG_ROCKET_APP_ID }}
  KUBE_CONFIG_DATA:  ${{ secrets.KUBE_CONFIG_DATA }}
  NODE_OPTIONS: "--max-old-space-size=7168"
  NEXT_PUBLIC_LAUNCHDARKLY_ID: ${{ secrets.NEXT_PUBLIC_LAUNCHDARKLY_ID }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy
    environment:
      name: ${{ github.event.inputs.environment }}
    steps:
    - uses: actions/checkout@v3
    - name: Set Environment
      run: |
        cat ".github/env.common" >>$GITHUB_ENV
        cat ".github/env.${{ github.event.inputs.environment }}" >>$GITHUB_ENV

    - name: Helm Deploy
      uses: ./.github/actions/deploy
      with:
        name: ${{ env.APP_NAME }}      
        namespace: ${{ env.DEPLOYMENT_NAMESPACE }}
        tag: ${{ github.event.inputs.tag }}
        chart_directory: deployment/app-chart

#        command: |
#          export CHART_FOLDER=deployment/app-chart
#          helm lint $CHART_FOLDER
#          helm --namespace $DEPLOYMENT_NAMESPACE upgrade --install --create-namespace --wait $APP_NAME $CHART_FOLDER \
#            --set image.tag=$DOCKER_ENV_TAG \
#            --set environment.near_env=${NEAR_ENV} \
#            --set environment.near_contract_name=${NEAR_CONTRACT_NAME} \
#            --set environment.api_url=${API_URL} \
#            --set environment.google_analytics_key=${GOOGLE_ANALYTICS_KEY} \
#            --set environment.log_rocket_app_id=${LOG_ROCKET_APP_ID} \
#            --set environment.near_env=${NEAR_ENV} \
#            --set environment.stats_api_url=${STATS_API_URL} \
#            --set environment.next_public_launchdarkly_id=${NEXT_PUBLIC_LAUNCHDARKLY_ID} \
#            --set environment.app_domain=${APP_DOMAIN} \
#            --set environment.release_notes=${RELEASE_NOTES} \
#            --set environment.generic_factory_contract_name=${GENERIC_FACTORY_CONTRACT_NAME} \
#            --set environment.staking_contract_binary_hash=${STAKING_CONTRACT_BINARY_HASH} \
#            --set ingress.host=${K8S_INGRESS_HOST}
